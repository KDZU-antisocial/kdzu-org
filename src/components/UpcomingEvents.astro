---
import { getCollection } from 'astro:content';
import EventCard from './EventCard.astro';

const events = await getCollection('events');

// Create a timezone-agnostic "today" date for comparison
const now = new Date();
const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());

const upcomingEvents = events.filter(event => {
  // Parse the date string and create a timezone-agnostic date
  const [year, month, day] = event.data.date.split('.').map(Number);
  const eventDate = new Date(year, month - 1, day); // month is 0-indexed
  
  return eventDate >= today;
});

const sortedEvents = upcomingEvents.sort((a, b) => {
  // Parse dates consistently for sorting
  const [yearA, monthA, dayA] = a.data.date.split('.').map(Number);
  const [yearB, monthB, dayB] = b.data.date.split('.').map(Number);
  
  const dateA = new Date(yearA, monthA - 1, dayA);
  const dateB = new Date(yearB, monthB - 1, dayB);
  
  return dateA.valueOf() - dateB.valueOf();
});
---

<section>
  <h2>Upcoming Events</h2>
  <ul class="calendar">
    {sortedEvents.map((event) => (
      <EventCard event={event} />
    ))}
  </ul>
</section> 