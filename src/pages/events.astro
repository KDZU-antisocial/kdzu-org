---
import Copyright from '../components/Copyright.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import EventCard from '../components/EventCard.astro';
import { getCollection } from 'astro:content';

const isDev = import.meta.env.DEV;
const cssUrl = isDev ? '/styles/global.css' : 'https://static.kdzu.org/styles/global.css';

const events = await getCollection('events', ({ id }) => {
  return !id.startsWith('_');
});

// Create a timezone-agnostic "today" date for comparison
const now = new Date();
const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());

const upcomingEvents = events.filter(event => {
  // Parse the date string and create a timezone-agnostic date
  const [year, month, day] = event.data.date.split('.').map(Number);
  const eventDate = new Date(year, month - 1, day); // month is 0-indexed
  
  return eventDate >= today;
});

const pastEvents = events.filter(event => {
  // Parse the date string and create a timezone-agnostic date
  const [year, month, day] = event.data.date.split('.').map(Number);
  const eventDate = new Date(year, month - 1, day); // month is 0-indexed
  
  return eventDate < today;
});

const sortedUpcomingEvents = upcomingEvents.sort((a, b) => {
  // Parse dates consistently for sorting
  const [yearA, monthA, dayA] = a.data.date.split('.').map(Number);
  const [yearB, monthB, dayB] = b.data.date.split('.').map(Number);
  
  const dateA = new Date(yearA, monthA - 1, dayA);
  const dateB = new Date(yearB, monthB - 1, dayB);
  
  return dateA.valueOf() - dateB.valueOf();
});

const sortedPastEvents = pastEvents.sort((a, b) => {
  // Parse dates consistently for sorting
  const [yearA, monthA, dayA] = a.data.date.split('.').map(Number);
  const [yearB, monthB, dayB] = b.data.date.split('.').map(Number);
  
  const dateA = new Date(yearA, monthA - 1, dayA);
  const dateB = new Date(yearB, monthB - 1, dayB);
  
  return dateB.valueOf() - dateA.valueOf(); // Reverse order for past events
});
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Events - KDZU</title>
    <link rel="stylesheet" href={cssUrl} />
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="https://static.kdzu.org/favicon/favicon.ico" />
    <link rel="icon" type="image/svg+xml" href="https://static.kdzu.org/favicon/favicon.svg" />
    <link rel="icon" type="image/png" href="https://static.kdzu.org/favicon/favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="https://static.kdzu.org/favicon/favicon-16x16.png" sizes="16x16" />
    <link rel="apple-touch-icon" href="https://static.kdzu.org/favicon/apple-touch-icon.png" sizes="180x180" />
    <link rel="manifest" href="https://static.kdzu.org/favicon/site.webmanifest" />
    <meta name="theme-color" content="#191919" />
  </head>
  <body>
    <Header />
    <main>
      <div class="main-content">
        <h1>Events</h1>
        <section>
          <ul class="calendar">
            {sortedUpcomingEvents.map((event) => (
              <EventCard event={event} href={`/events/${event.slug}/`} />
            ))}
          </ul>
        </section>

        {sortedPastEvents.length > 0 && (
          <section>
            <h2>Past Events</h2>
            <ul class="calendar">
              {sortedPastEvents.map((event) => (
                <EventCard event={event} href={`/events/${event.slug}/`} />
              ))}
            </ul>
          </section>
        )}
      </div>
    </main>
    <Footer />
  </body>
</html> 