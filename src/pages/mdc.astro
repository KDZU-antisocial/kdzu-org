---
import { getCollection } from 'astro:content';
import Copyright from '../components/Copyright.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';

const isDev = import.meta.env.DEV;
const cssUrl = isDev ? '/styles/global.css' : 'https://static.kdzu.org/styles/global.css';

const posts = await getCollection('mdc');
const sortedPosts = posts
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>MDC - KDZU</title>
    <link rel="stylesheet" href={cssUrl} />
  </head>
  <body class="mdc-page">
    <Header />
    <main>
      <div class="main-content">
        <h1>MDC</h1>
        <p class="subtitle">Re-animating the OMSA [Obsolete Monuments Space Agency] MDC mission robots.</p>
        <p>In July 2025 we found the site of the OMSA MDC mission robots and we are re-animating them.</p>
        
        <div class="mdc-grid">
          {sortedPosts.map((post) => (
            <article class="mdc-card">
              <a href={`/mdc/${post.slug}`}>
                {post.data.heroImage && (
                  <div class="mdc-image">
                    <img
                      src={post.data.heroImage}
                      alt={post.data.title}
                      width="960"
                      height="540"
                    />
                  </div>
                )}
                <div class="mdc-content">
                  <h3>{post.data.title}</h3>
                  <p class="mdc-description">{post.data.description}</p>
                  <div class="mdc-meta">
                    <time datetime={post.data.pubDate.toISOString()}>
                      {post.data.pubDate.toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                    {post.data.tags.length > 0 && (
                      <div class="mdc-tags">
                        {post.data.tags.map((tag) => (
                          <a class="tag" href={`/mdc/tag/${encodeURIComponent(tag)}`}>{tag}</a>
                        ))}
                      </div>
                    )}
                  </div>
                </div>
              </a>
            </article>
          ))}
        </div>
        
        {sortedPosts.length === 0 && (
          <section>
            <h2>No Posts Yet</h2>
            <p>No MDC posts have been published yet. Check back soon!</p>
          </section>
        )}
      </div>
    </main>
    <Footer />
  </body>
</html>

<style>
  .mdc-page main {
    display: block !important;
    grid-template-columns: 1fr !important;
  }

  .mdc-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 2rem;
  }

  .mdc-card {
    background: var(--color-card-bg);
    border: 1px solid var(--color-border);
    border-radius: 2px;
    overflow: hidden;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .mdc-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
  }

  .mdc-card a {
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .mdc-image {
    width: 100%;
    height: 200px;
    overflow: hidden;
  }

  .mdc-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .mdc-content {
    padding: 1.5rem;
  }

  .mdc-content h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
    color: var(--color-text);
  }

  .mdc-description {
    color: var(--color-light-text);
    margin: 0 0 1rem 0;
    font-size: 1rem;
    line-height: 1.5;
  }

  .mdc-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .mdc-meta time {
    color: var(--color-light-text);
    font-size: 0.9rem;
  }

  .mdc-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.25rem;
    margin-top: 0.25rem;
  }

  .tag {
    background: var(--color-tag-bg);
    color: var(--color-accent);
    padding: 0.25rem 0.5rem;
    border-radius: 2px;
    font-size: 0.8rem;
    font-weight: 500;
    transition: background 0.2s;
  }

  @media (max-width: 768px) {
    .mdc-grid {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .mdc-content {
      padding: 1rem;
    }

    .mdc-content h3 {
      font-size: 1.25rem;
    }

    .mdc-meta {
      flex-direction: column;
      align-items: flex-start;
    }
  }

  @media (max-width: 480px) {
    .mdc-content h3 {
      font-size: 1.125rem;
    }

    .mdc-description {
      font-size: 0.9rem;
    }
  }
</style> 